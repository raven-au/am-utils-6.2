#!/bin/sh
#set -x
# helps bootstrapping am-utils, when checked out from CVS
# requires GNU autoconf and GNU automake
# this is not meant to go into the distributions
# Erez Zadok <ezk@cs.columbia.edu>

# test cwd
test -f ../amd/amd.c && cd ..
if [ ! -f amd/amd.c ]; then
    echo "Must run $0 from the top level source directory."
    exit 1
fi

# validate macros directory and some macro files
if [ ! -d m4/macros ]; then
    echo No m4/macros directory found!
    exit 1
fi
if [ ! -f m4/macros/HEADER ]; then
    echo No m4/macros/HEADER file found!
    exit 1
fi

# remove any remaining autom4te.cache directory
rm -fr autom4te.cache autom4te-*.cache

# generate acinclude.m4 file
echo "AMU: prepare acinclude.m4..."
test -f acinclude.m4 && mv -f acinclude.m4 acinclude.m4.old
(cd m4/macros
 for i in HEADER *.m4; do
     cat $i
     echo
     echo
 done
 cat TRAILER
) > acinclude.m4

# generate the rest of the scripts
echo "AMU: autoreconf..."
# show version
autoreconf --version 2>&1 | head -1
if autoreconf -f -i; then
    :
else
    echo "autoreconf command failed.  fix errors and rerun $0."
    exit 2
fi

echo "AMU: Fixing ylwrap..."
patch << \EOF
--- ylwrap.orig	2013-12-02 19:42:59.239979147 -0500
+++ ylwrap	2013-12-02 19:42:36.559379132 -0500
@@ -96,6 +96,23 @@
   *[\\/]*) prog="`pwd`/$prog" ;;
 esac
 
+set -x
+prefix=`echo $input | sed \
+	-e 's,^.*/,,g' \
+	-e 's/_gram.[yl]$/_/g' \
+	-e 's/_lex.[yl]$/_/g' \
+	-e 's/_parse.[yl]$/_/g' \
+	-e 's/_tok.[yl]$/_/g'`  
+
+case "$prog" in
+*lex)
+	flags="-P $prefix"
+	out="mv lex.$prefix.c lex.yy.c"
+	;;
+yacc|bison)
+	flags="-p $prefix";;
+esac
+
 # FIXME: add hostname here for parallel makes that run commands on
 # other machines.  But that might take us over the 14-char limit.
 dirname=ylwrap$$
@@ -105,10 +122,13 @@
 cd $dirname
 
 case $# in
-  0) "$prog" "$input" ;;
-  *) "$prog" "$@" "$input" ;;
+  0) "$prog" $flags "$input" ;;
+  *) "$prog" $flags "$@" "$input" ;;
 esac
 ret=$?
+if [ -n "$out" ]; then
+	eval $out
+fi
 
 if test $ret -eq 0; then
   set X $pairlist
EOF

# save timestamp
echo "AMU: save timestamp..."
echo timestamp > stamp-h.in

exit 0
